name: "Integration and Delivey"

on:
  push:
    branches:
      - "main"
      - "develop"
      - "feat/*"
      - "hotfix/*"
    tags:
      - "v*"

jobs:
  validate:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: set PY
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: configure environment
        run: |
          pip install -U pip
          pip install poetry
          poetry install
      - name: validate code write
        run: |
          poetry run pre-commit run -av
      - name: validate unit tests
        run: |
          poetry run pytest

  delivery:
    runs-on: ubuntu-22.04
    if: github.ref_type == "tag"

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: configure environment
        run: |
          pip install -U pip
          pip install poetry
      - name: build and delivery
        run: |
          PROJECT_VERSION=v$(poetry version -s)
          if [ "$PROJECT_VERSION" != "${{ github.ref_name }}" ]; then
            echo "Version of project not match with tag"
            echo "Tag: ${{ github.ref_name }}"
            echo "Version: $PROJECT_VERSION"
            exit 1
          fi
          poetry publish -n --build -u __token__ -p ${{ secrets.PYPI_TOKEN }}
